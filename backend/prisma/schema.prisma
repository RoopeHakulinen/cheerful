generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Carpet {
  id                 Int          @id @default(autoincrement())
  width              Int
  height             Int
  color              String       @db.VarChar(255)
  horizontalSegments Int
  verticalSegments   Int
  choreographyId     Int          @unique
  choreography       Choreography @relation(fields: [choreographyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Choreography {
  id                 Int                  @id @default(autoincrement())
  name               String               @db.VarChar(255)
  frames             Json                 @db.Json
  carpet             Carpet?
  choreographyPerson ChoreographyPerson[]
  team               Team                 @relation(fields: [teamId], references: [id])
  teamId             Int
}

model ChoreographyPerson {
  id             Int          @id @default(autoincrement())
  color          String       @db.VarChar(255)
  personId       Int
  choreographyId Int
  choreography   Choreography @relation(fields: [choreographyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  person         Person       @relation(fields: [personId], references: [id], onDelete: NoAction, onUpdate: Cascade)
}

model Person {
  id                 Int                  @id @default(autoincrement())
  name               String               @db.VarChar(255)
  choreographyPerson ChoreographyPerson[]
}

model User {
  id        Int     @id @default(autoincrement())
  firstName String? @db.VarChar(255)
  lastName  String? @db.VarChar(255)
  email     String  @unique @db.VarChar(255)
  teams     Team[]
}

model Team {
  id             Int            @id @default(autoincrement())
  name           String         @db.VarChar(255)
  choreographies Choreography[]
  users          User[]
}

model Exercise {
  id          Int    @id @default(autoincrement())
  name        String @db.VarChar(255)
  description String @db.VarChar(255)
  difficulty  Int
  tags        Tag[]
}

model Tag {
  id        Int        @id @default(autoincrement())
  name      String     @db.VarChar(255)
  exercises Exercise[]
}
